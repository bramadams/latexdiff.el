(ert-deftest check-clean ()
  (let* ((file1 (latexdiff-testcase-file1))
         (latexdiff-auto-clean-aux nil)
         (latexdiff-auto-display nil)
         (rev1 (latexdiff-testcase-rev1))
         (rev2 (latexdiff-testcase-rev2)))
    ;; On the current buffer
    (with-current-buffer (find-file-noselect file1)
      (let* ((diff-dir (latexdiff-vc--compile-diff-with-current rev1))
             (fileaux (format "%s/%s.out" diff-dir (file-name-base file1)))
             (filetex (format "%s/%s.tex" diff-dir (file-name-base file1)))
             (filepdf (format "%s/%s.pdf" diff-dir (file-name-base file1))))
        (while latexdiff-runningp (sleep-for 1))
        (should (file-exists-p fileaux))
        (should (file-exists-p filetex))
        (should (file-exists-p filepdf))
        (latexdiff-clean)
        (sleep-for 2)
        (should (not (file-exists-p fileaux)))
        (should (not (file-exists-p filepdf)))
        (should (not (file-exists-p filetex)))))
    ;; Clean is done on another directory than the current one
    (let ((diff-dir nil)
          (fileaux nil)
          (filetex nil)
          (filepdf nil))
      (with-current-buffer (find-file-noselect file1)
        (setq diff-dir (latexdiff-vc--compile-diff-with-current rev2))
        (setq fileaux (format "%s/%s.out" diff-dir (file-name-base file1)))
        (setq filetex (format "%s/%s.tex" diff-dir (file-name-base file1)))
        (setq filepdf (format "%s/%s.pdf" diff-dir (file-name-base file1)))
        (while latexdiff-runningp (sleep-for 1))
        (should (file-exists-p fileaux))
        (should (file-exists-p filetex))
        (should (file-exists-p filepdf)))
      (latexdiff-clean (file-name-directory file1))
      (sleep-for 2)
      (with-current-buffer (find-file-noselect file1)
        (should (not (file-exists-p fileaux)))
        (should (not (file-exists-p filepdf)))
        (should (not (file-exists-p filetex)))))))
